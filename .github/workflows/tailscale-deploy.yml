name: Build and Deploy to Tailscale Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven Wrapper
        working-directory: demo # Run commands inside the 'demo' folder
        run: |
          chmod +x ./mvnw
          ./mvnw -B package --file pom.xml -DskipTests

      - name: Connect to Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci-runner 

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy and Run Application
        run: |
          # 1. Find the JAR file name
          JAR_FILE=$(find demo/target -name "*.jar" | head -n 1)
          if [ -z "$JAR_FILE" ]; then
            echo "Error: JAR file not found in demo/target."
            exit 1
          fi

          # 2. Securely copy the JAR to the server
          scp -o StrictHostKeyChecking=accept-new $JAR_FILE root@java-web2:/opt/apps/app.jar

          # 3. SSH into the server and run the new script
          ssh root@java-web2 '
            echo "--- Stopping old processes ---"
            # Stop the old Java app if it is running
            pkill -f "java -jar /opt/apps/app.jar" || true
            # Stop the old tailscale serve if it is running
            pkill -f "tailscale serve" || true
            
            echo "--- Starting new processes in the background ---"
            # Start the new Java app in the background, logging to /tmp/app.log
            nohup java -jar /opt/apps/app.jar > /tmp/app.log 2>&1 &

            # Start tailscale serve in the background
            tailscale serve --bg http://localhost:8080
            
            echo "--- Deployment complete ---"
          '
